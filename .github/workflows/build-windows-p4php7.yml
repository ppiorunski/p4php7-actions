name: Build P4Php for Windows

env:
  codeline: "r20.1"
  docker: "ppiorunski/p4php7:server2019-vs2017"
  phpMount: ":c:\\dependencies\\php"
  p4phpMount: ":c:\\dependencies\\p4php-source"
  p4apiMount: ":c:\\dependencies\\p4api"
  p4phpBinMount: ":c:\\p4php-bin"
  phpSdkMount:  ":c:\\dependencies\\php-sdk-binary-tools"
  phpMinor: "7"
  phpMajor: "2"
  libname: "p4-bin\\%bin%\\perforce_php7%PHP_MINOR_VER%"
  username: ${{ secrets.DOCKERHUB_USERNAME }}
  password: ${{ secrets.DOCKERHUB_TOKEN }}

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
jobs:
  build:
    runs-on: windows-2019
    steps:
    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Login to docker hub
      run: |
        echo $env:password| docker login --username $env:username --password-stdin
        type C:\Users\runneradmin\.docker\config.json

    - name: Get p4api and p4 binary
      run: |
        Invoke-WebRequest -outfile  ..\p4api.zip -uri ftp://ftp.perforce.com/perforce/$env:codeline/bin.ntx64/p4api_vs2017_dyn_openssl1.1.1.zip
        cd .. ; Expand-Archive -Path p4api.zip ;  Move-Item -path .\p4api\*\* .\p4api\ ; cd p4php7
        Invoke-WebRequest -outfile  p4.exe -uri ftp://ftp.perforce.com/perforce/$env:codeline/bin.ntx64/p4.exe
        Invoke-WebRequest -outfile  p4d.exe -uri ftp://ftp.perforce.com/perforce/$env:codeline/bin.ntx64/p4d.exe



    - name: Build P4Php 7.2 Openssl 1.1.1
      run: |
        docker pull $docker
        docker run \
        -v %PHPSDKMOUNT% \
        -v %PHPMOUNT% \
        -v %P4PHPMOUNT% \
        -v %P4APIMOUNT% \
        -v %PHPOUTMOUNT% \
        --env PHP_MINOR_VER --env arch --env TS=%%T  \
        $docker

    - uses: actions/upload-artifact@v2
      with:
        path: modules/perforce.so
