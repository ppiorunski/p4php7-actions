name: Build P4Php for Linux

env:
  codeline: "r20.1"
  P4APIDIR: "/home/runner/work/p4php7/p4api"
  P4PHPDIR: "/home/runner/work/p4php7/p4php7"


on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
  release:
    types: [published]

jobs:
    # Jobs run in paraller below is the name-id of job, in this case "build"
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ssl: [1.1.1, 1.0.2]
        php: [70, 71, 72, 73, 74]
    steps:
    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Login to docker hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Get p4api for Openssl {{ matrix.ssl }}
      run: |
        cd .. && wget ftp://ftp.perforce.com/perforce/$codeline/bin.linux26x86_64/p4api-glibc2.3-openssl{{ matrix.ssl }}.tgz
        tar -xvf p4api-glibc2.3-openssl{{ matrix.ssl }}.tgz && rm p4api-glibc2.3-openssl{{ matrix.ssl }}.tgz && mv p4api* p4api && ls -la && cd p4php7 && pwd
      
    - name: Get p4 and p4d binary
      run: |
        wget ftp://ftp.perforce.com/perforce/$codeline/bin.linux26x86_64/p4 && chmod 775 p4
        wget ftp://ftp.perforce.com/perforce/$codeline/bin.linux26x86_64/p4d && chmod 775 p4d

    - name: Build P4Php {{ matrix.php }} Openssl {{ matrix.ssl }}
      run: |
        docker pull ppiorunski/p4php7:php{{ matrix.php }}-ssl{{ matrix.ssl }}
        docker run -v $P4APIDIR:/p4/build/p4api -v $P4PHPDIR:/p4/build/p4-php7 ppiorunski/p4php7:php{{ matrix.php }}-ssl{{ matrix.ssl }}

    - uses: actions/upload-artifact@v2
      with:
        name: perforce_php{{ matrix.php }}-ssl{{ matrix.ssl }}.so
        path: modules/perforce.so
