name: Build P4Php for Linux

env:
  codeline: "r20.1"
  P4APIDIR: "/home/runner/work/p4php7/p4api"
  P4PHPDIR: "/home/runner/work/p4php7/p4php7"
  sha:      ${{ github.sha }}
  tag:      "v1.1.${{ github.sha }}"


on:
  push:
    branches: [ master ]
    tags:
    - 'v*'
  pull_request:
    branches: [ master ]
  workflow_dispatch:
  release:
    types: [published]

jobs:
  create_release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.tag }}
        release_name: Release v1.1.1
        draft: false
        prerelease: false

    # Jobs run in paraller below is the name-id of job, in this case "build"
  build:
    needs: create_release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ssl: [1.1.1, 1.0.2]
        php: [70, 71, 72, 73, 74]
    steps:
    - name: Checkout source code
      uses: actions/checkout@v2

    - name: Login to docker hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Get p4api for Openssl ${{ matrix.ssl }}
      run: |
        cd .. && wget ftp://ftp.perforce.com/perforce/$codeline/bin.linux26x86_64/p4api-glibc2.3-openssl${{ matrix.ssl }}.tgz
        tar -xvf p4api-glibc2.3-openssl${{ matrix.ssl }}.tgz && rm p4api-glibc2.3-openssl${{ matrix.ssl }}.tgz && mv p4api* p4api && ls -la && cd p4php7 && pwd

    - name: Get p4 and p4d binary
      run: |
        wget ftp://ftp.perforce.com/perforce/$codeline/bin.linux26x86_64/p4 && chmod 775 p4
        wget ftp://ftp.perforce.com/perforce/$codeline/bin.linux26x86_64/p4d && chmod 775 p4d

    - name: Build P4Php ${{ matrix.php }} Openssl ${{ matrix.ssl }}
      run: |
        docker pull ppiorunski/p4php7:php${{ matrix.php }}-ssl${{ matrix.ssl }}
        docker run -v $P4APIDIR:/p4/build/p4api -v $P4PHPDIR:/p4/build/p4-php7 ppiorunski/p4php7:php${{ matrix.php }}-ssl${{ matrix.ssl }}
        mv modules/perforce.so perforce_php${{ matrix.php }}-ssl${{ matrix.ssl }}.so
    - uses: actions/upload-artifact@v2
      with:
        path: perforce_php${{ matrix.php }}-ssl${{ matrix.ssl }}.so

    - name: Upload Release Asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps
        asset_path: ./perforce_php${{ matrix.php }}-ssl${{ matrix.ssl }}.so
        asset_name: perforce_php${{ matrix.php }}-ssl${{ matrix.ssl }}.so
        asset_content_type: application/zip
